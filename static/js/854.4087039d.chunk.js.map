{"version":3,"file":"static/js/854.4087039d.chunk.js","mappings":"uQAGaA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qJASRE,EAAQF,EAAAA,GAAAA,MAAH,uIAQLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,qIAQLK,EAAML,EAAAA,GAAAA,OAAH,8NAeHM,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,2D,SCnCdQ,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIC,WAClCC,MAAON,EAAAA,KAAaM,QAAQD,WAC5BE,SAAUP,EAAAA,KAAaK,WAAWF,IAAI,KAGlCK,EAAgB,CACpBN,KAAM,GACNI,MAAO,GACPC,SAAU,IAGL,SAASE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,+BACE,SAAC,KAAD,CACEH,cAAeA,EACfI,SAnBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAW9BJ,GAASK,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAOKE,iBAAkBjB,EAHpB,UAKE,UAACT,EAAD,CAAU2B,aAAa,MAAvB,WACE,UAACxB,EAAD,mBAEE,SAACC,EAAD,CACEwB,KAAK,OACLC,YAAY,aACZjB,KAAK,OACLkB,MAAM,4IAER,SAACvB,EAAD,CAAOK,KAAK,OAAOmB,UAAU,YAE/B,UAAC5B,EAAD,oBAEE,SAACC,EAAD,CAAOwB,KAAK,OAAOC,YAAY,cAAcjB,KAAK,WAClD,SAACL,EAAD,CAAOK,KAAK,QAAQmB,UAAU,YAEhC,UAAC5B,EAAD,uBAEE,SAACC,EAAD,CACEwB,KAAK,WACLC,YAAY,iBACZjB,KAAK,cAEP,SAACL,EAAD,CAAOK,KAAK,WAAWmB,UAAU,YAGnC,SAACzB,EAAD,CAAKsB,KAAK,SAAV,4BAKT,CCzEc,SAASI,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACd,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormBook = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: large;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  margin-top: 10px;\n  border: 1px solid #cccccc;\n  border-radius: 4px;\n  outline: none;\n  height: 30px;\n`;\n\nexport const Btn = styled.button`\n  /* display: flex; */\n\n  margin-top: 10px;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: #fff;\n\n  &:hover,\n  &:focus {\n    background-color: #05c3dd;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  margin-top: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FormBook, Input, Label, Btn, Error } from './RegisterForm.styled';\n// import css from './RegisterForm.module.css';\n\nlet schema = yup.object().shape({\n  name: yup.string().min(3).max(30).required(),\n  email: yup.string().email().required(),\n  password: yup.string().required().min(7),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    // const findDuplicateName = (contacts, newName) => {\n    //   return contacts.find(({ name }) => name.toLowerCase() === newName);\n    // };\n    // const { name } = values;\n    // const nameToRegistr = name.toLowerCase();\n    // if (findDuplicateName(contacts.items, nameToRegistr)) {\n    //   Notiflix.Notify.info(`${name} is already in your contacts`);\n    //   return;\n    // }\n\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <FormBook autoComplete=\"off\">\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            />\n            <Error name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <Input type=\"text\" placeholder=\"Enter email\" name=\"email\" />\n            <Error name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n            />\n            <Error name=\"password\" component=\"div\" />\n          </Label>\n\n          <Btn type=\"submit\">Register</Btn>\n        </FormBook>\n      </Formik>\n    </>\n  );\n}\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       register({\n//         name: form.elements.name.value,\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label className={css.label}>\n//         Username\n//         <input type=\"text\" name=\"name\" />\n//       </label>\n//       <label className={css.label}>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </label>\n//       <label className={css.label}>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </label>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n// };\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormBook","styled","Form","Label","Input","Field","Btn","Error","ErrorMessage","schema","yup","shape","name","min","max","required","email","password","initialValues","RegisterForm","dispatch","useDispatch","onSubmit","values","resetForm","register","validationSchema","autoComplete","type","placeholder","title","component","Register","Helmet"],"sourceRoot":""}