{"version":3,"file":"static/js/960.97323ba9.chunk.js","mappings":"+QAyBO,SAASA,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBT,GAASU,EAAAA,EAAAA,IAAMF,IACfC,GACD,IAGH,OACE,SAAC,KAAD,CAAME,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAtD,UACE,SAAC,KAAD,CAAKH,GAAG,QAAQI,EAAG,EAAGC,QAAQ,KAA9B,UACE,iBAAMT,SAAUL,EAAOe,aAAvB,UACE,UAAC,KAAD,CAAQC,QAAS,EAAGN,MAAM,aAA1B,WACE,UAAC,KAAD,CAAaO,YAAU,EAAvB,WACE,SAAC,KAAD,CAAWC,QAAQ,QAAnB,oBACA,SAAC,KAAD,CACEC,GAAG,QACHC,KAAK,QACLC,YAAY,cACZC,KAAK,QACLC,QAAQ,SACRC,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAOM,OAAOH,YAGzB,UAAC,KAAD,CAAac,YAAU,EAAvB,WACE,SAAC,KAAD,CAAWC,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,GAAG,WACHC,KAAK,WACLE,KAAK,WACLD,YAAY,iBACZE,QAAQ,SACRC,SAAUxB,EAAOyB,aACjBC,MAAO1B,EAAOM,OAAOF,eAIzB,SAAC,KAAD,CAAQkB,KAAK,SAASK,YAAY,SAASC,MAAM,OAAjD,4BAQX,CCzEc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACjC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// import { Formik } from 'formik';\nimport { useFormik } from 'formik';\n\n// import * as yup from 'yup';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\n// let schema = yup.object().shape({\n//   email: yup.string().email().required('Please, enter email'),\n//   password: yup\n//     .string()\n//     .required('No password provided.')\n//     .min(6, 'Password is too short - should be 6 chars minimum.')\n//     .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n// });\n\nexport function LoginForm() {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      dispatch(logIn(values));\n      resetForm();\n    },\n  });\n\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\">\n        <form onSubmit={formik.handleSubmit}>\n          <VStack spacing={4} align=\"flex-start\">\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                type=\"email\"\n                variant=\"filled\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n              />\n            </FormControl>\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"password\">Password</FormLabel>\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter password\"\n                variant=\"filled\"\n                onChange={formik.handleChange}\n                value={formik.values.password}\n              />\n            </FormControl>\n\n            <Button type=\"submit\" colorScheme=\"purple\" width=\"full\">\n              Log In\n            </Button>\n          </VStack>\n        </form>\n      </Box>\n    </Flex>\n  );\n}\n\n// const initialValues = {\n//   email: '',\n//   password: '',\n// };\n\n// export function LoginForm() {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = (values, { resetForm }) => {\n//     dispatch(logIn(values));\n//     resetForm();\n//   };\n\n//   return (\n//     <>\n//       <Formik\n//         initialValues={initialValues}\n//         onSubmit={handleSubmit}\n//         validationSchema={schema}\n//       >\n//         <FormBook autoComplete=\"off\">\n//           <Label>\n//             Email\n//             <Input type=\"text\" placeholder=\"Enter email\" name=\"email\" />\n//             <Error name=\"email\" component=\"div\" />\n//           </Label>\n//           <Label>\n//             Password\n//             <Input\n//               type=\"password\"\n//               placeholder=\"Enter password\"\n//               name=\"password\"\n//             />\n//             <Error name=\"password\" component=\"div\" />\n//           </Label>\n\n//           <Btn type=\"submit\">Log In</Btn>\n//         </FormBook>\n//       </Formik>\n//     </>\n//   );\n// }\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       logIn({\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label className={css.label}>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </label>\n//       <label className={css.label}>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </label>\n//       <button type=\"submit\">Log In</button>\n//     </form>\n//   );\n// };\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","values","resetForm","logIn","bg","align","justify","h","p","rounded","handleSubmit","spacing","isRequired","htmlFor","id","name","placeholder","type","variant","onChange","handleChange","value","colorScheme","width","Login","Helmet"],"sourceRoot":""}